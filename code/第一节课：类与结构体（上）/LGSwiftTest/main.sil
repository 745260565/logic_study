sil_stage canonical

import Builtin
import Swift
import SwiftShims

import Foundation

class Teacher {
  @_hasStorage @_hasInitialValue static var age: Int { get set }
  @objc deinit
  init()
}

// one-time initialization token for age
sil_global private @$s4main7TeacherC3age_Wz : $Builtin.Word

// static Teacher.age
sil_global hidden @$s4main7TeacherC3ageSivpZ : $Int

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = metatype $@thick Teacher.Type
  // function_ref Teacher.age.unsafeMutableAddressor
  %3 = function_ref @$s4main7TeacherC3ageSivau : $@convention(thin) () -> Builtin.RawPointer // user: %4
  %4 = apply %3() : $@convention(thin) () -> Builtin.RawPointer // user: %5
  %5 = pointer_to_address %4 : $Builtin.RawPointer to [strict] $*Int // user: %8
  %6 = integer_literal $Builtin.Int64, 30         // user: %7
  %7 = struct $Int (%6 : $Builtin.Int64)          // user: %9
  %8 = begin_access [modify] [dynamic] %5 : $*Int // users: %9, %10
  store %7 to %8 : $*Int                          // id: %9
  end_access %8 : $*Int                           // id: %10
  %11 = metatype $@thick Teacher.Type
  // function_ref Teacher.age.unsafeMutableAddressor
  %12 = function_ref @$s4main7TeacherC3ageSivau : $@convention(thin) () -> Builtin.RawPointer // user: %13
  %13 = apply %12() : $@convention(thin) () -> Builtin.RawPointer // user: %14
  %14 = pointer_to_address %13 : $Builtin.RawPointer to [strict] $*Int // user: %17
  %15 = integer_literal $Builtin.Int64, 20        // user: %16
  %16 = struct $Int (%15 : $Builtin.Int64)        // user: %18
  %17 = begin_access [modify] [dynamic] %14 : $*Int // users: %18, %19
  store %16 to %17 : $*Int                        // id: %18
  end_access %17 : $*Int                          // id: %19
  %20 = integer_literal $Builtin.Int32, 0         // user: %21
  %21 = struct $Int32 (%20 : $Builtin.Int32)      // user: %22
  return %21 : $Int32                             // id: %22
} // end sil function 'main'

// one-time initialization function for age
sil private [global_init_once_fn] @$s4main7TeacherC3age_WZ : $@convention(c) () -> () {
bb0:
  alloc_global @$s4main7TeacherC3ageSivpZ         // id: %0
  %1 = global_addr @$s4main7TeacherC3ageSivpZ : $*Int // user: %4
  %2 = integer_literal $Builtin.Int64, 18         // user: %3
  %3 = struct $Int (%2 : $Builtin.Int64)          // user: %4
  store %3 to %1 : $*Int                          // id: %4
  %5 = tuple ()                                   // user: %6
  return %5 : $()                                 // id: %6
} // end sil function '$s4main7TeacherC3age_WZ'

// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  %3 = tuple_extract %2 : $(Builtin.Int64, Builtin.Int1), 0 // user: %4
  %4 = struct $Int (%3 : $Builtin.Int64)          // user: %5
  return %4 : $Int                                // id: %5
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'

// Teacher.age.unsafeMutableAddressor
sil hidden [global_init] @$s4main7TeacherC3ageSivau : $@convention(thin) () -> Builtin.RawPointer {
bb0:
  %0 = global_addr @$s4main7TeacherC3age_Wz : $*Builtin.Word // user: %1
  %1 = address_to_pointer %0 : $*Builtin.Word to $Builtin.RawPointer // user: %3
  // function_ref one-time initialization function for age
  %2 = function_ref @$s4main7TeacherC3age_WZ : $@convention(c) () -> () // user: %3
  %3 = builtin "once"(%1 : $Builtin.RawPointer, %2 : $@convention(c) () -> ()) : $()
  %4 = global_addr @$s4main7TeacherC3ageSivpZ : $*Int // user: %5
  %5 = address_to_pointer %4 : $*Int to $Builtin.RawPointer // user: %6
  return %5 : $Builtin.RawPointer                 // id: %6
} // end sil function '$s4main7TeacherC3ageSivau'

// static Teacher.age.getter
sil hidden [transparent] @$s4main7TeacherC3ageSivgZ : $@convention(method) (@thick Teacher.Type) -> Int {
// %0 "self"                                      // user: %1
bb0(%0 : $@thick Teacher.Type):
  debug_value %0 : $@thick Teacher.Type, let, name "self", argno 1 // id: %1
  // function_ref Teacher.age.unsafeMutableAddressor
  %2 = function_ref @$s4main7TeacherC3ageSivau : $@convention(thin) () -> Builtin.RawPointer // user: %3
  %3 = apply %2() : $@convention(thin) () -> Builtin.RawPointer // user: %4
  %4 = pointer_to_address %3 : $Builtin.RawPointer to [strict] $*Int // user: %5
  %5 = begin_access [read] [dynamic] %4 : $*Int   // users: %6, %7
  %6 = load %5 : $*Int                            // user: %8
  end_access %5 : $*Int                           // id: %7
  return %6 : $Int                                // id: %8
} // end sil function '$s4main7TeacherC3ageSivgZ'

// static Teacher.age.setter
sil hidden [transparent] @$s4main7TeacherC3ageSivsZ : $@convention(method) (Int, @thick Teacher.Type) -> () {
// %0 "value"                                     // users: %8, %2
// %1 "self"                                      // user: %3
bb0(%0 : $Int, %1 : $@thick Teacher.Type):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $@thick Teacher.Type, let, name "self", argno 2 // id: %3
  // function_ref Teacher.age.unsafeMutableAddressor
  %4 = function_ref @$s4main7TeacherC3ageSivau : $@convention(thin) () -> Builtin.RawPointer // user: %5
  %5 = apply %4() : $@convention(thin) () -> Builtin.RawPointer // user: %6
  %6 = pointer_to_address %5 : $Builtin.RawPointer to [strict] $*Int // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*Int // users: %8, %9
  store %0 to %7 : $*Int                          // id: %8
  end_access %7 : $*Int                           // id: %9
  %10 = tuple ()                                  // user: %11
  return %10 : $()                                // id: %11
} // end sil function '$s4main7TeacherC3ageSivsZ'

// static Teacher.age.modify
sil hidden [transparent] @$s4main7TeacherC3ageSivMZ : $@yield_once @convention(method) (@thick Teacher.Type) -> @yields @inout Int {
// %0 "self"                                      // user: %1
bb0(%0 : $@thick Teacher.Type):
  debug_value %0 : $@thick Teacher.Type, let, name "self", argno 1 // id: %1
  // function_ref Teacher.age.unsafeMutableAddressor
  %2 = function_ref @$s4main7TeacherC3ageSivau : $@convention(thin) () -> Builtin.RawPointer // user: %3
  %3 = apply %2() : $@convention(thin) () -> Builtin.RawPointer // user: %4
  %4 = pointer_to_address %3 : $Builtin.RawPointer to [strict] $*Int // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %7, %10, %6
  yield %5 : $*Int, resume bb1, unwind bb2        // id: %6

bb1:                                              // Preds: bb0
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9

bb2:                                              // Preds: bb0
  end_access %5 : $*Int                           // id: %10
  unwind                                          // id: %11
} // end sil function '$s4main7TeacherC3ageSivMZ'

// Teacher.deinit
sil hidden @$s4main7TeacherCfd : $@convention(method) (@guaranteed Teacher) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Teacher):
  debug_value %0 : $Teacher, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Teacher to $Builtin.NativeObject // user: %3
  return %2 : $Builtin.NativeObject               // id: %3
} // end sil function '$s4main7TeacherCfd'

// Teacher.__deallocating_deinit
sil hidden @$s4main7TeacherCfD : $@convention(method) (@owned Teacher) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Teacher):
  debug_value %0 : $Teacher, let, name "self", argno 1 // id: %1
  // function_ref Teacher.deinit
  %2 = function_ref @$s4main7TeacherCfd : $@convention(method) (@guaranteed Teacher) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Teacher) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Teacher // user: %5
  dealloc_ref %4 : $Teacher                       // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4main7TeacherCfD'

// Teacher.__allocating_init()
sil hidden [exact_self_class] @$s4main7TeacherCACycfC : $@convention(method) (@thick Teacher.Type) -> @owned Teacher {
// %0 "$metatype"
bb0(%0 : $@thick Teacher.Type):
  %1 = alloc_ref $Teacher                         // user: %3
  // function_ref Teacher.init()
  %2 = function_ref @$s4main7TeacherCACycfc : $@convention(method) (@owned Teacher) -> @owned Teacher // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Teacher) -> @owned Teacher // user: %4
  return %3 : $Teacher                            // id: %4
} // end sil function '$s4main7TeacherCACycfC'

// Teacher.init()
sil hidden @$s4main7TeacherCACycfc : $@convention(method) (@owned Teacher) -> @owned Teacher {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Teacher):
  debug_value %0 : $Teacher, let, name "self", argno 1 // id: %1
  return %0 : $Teacher                            // id: %2
} // end sil function '$s4main7TeacherCACycfc'

sil_vtable Teacher {
  #Teacher.init!allocator: (Teacher.Type) -> () -> Teacher : @$s4main7TeacherCACycfC	// Teacher.__allocating_init()
  #Teacher.deinit!deallocator: @$s4main7TeacherCfD	// Teacher.__deallocating_deinit
}



// Mappings from '#fileID' to '#filePath':
//   'main/main.swift' => '/Users/chenghao/developer/logic_study/code/第一节课：类与结构体（上）/LGSwiftTest/LGSwiftTest/main.swift'


