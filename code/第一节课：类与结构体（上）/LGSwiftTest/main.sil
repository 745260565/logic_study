sil_stage canonical

import Builtin
import Swift
import SwiftShims

import Foundation

class Teacher {
  @_hasStorage @_hasInitialValue static let sharedInstance: Teacher { get }
  private init()
  @objc deinit
}

@_inheritsConvenienceInitializers class Subject : Teacher {
  @objc deinit
}

// one-time initialization token for sharedInstance
sil_global private @$s4main7TeacherC14sharedInstance_Wz : $Builtin.Word

// static Teacher.sharedInstance
sil_global hidden [let] @$s4main7TeacherC14sharedInstanceACvpZ : $Teacher

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = metatype $@thick Subject.Type              // user: %3
  %3 = upcast %2 : $@thick Subject.Type to $@thick Teacher.Type
  // function_ref Teacher.sharedInstance.unsafeMutableAddressor
  %4 = function_ref @$s4main7TeacherC14sharedInstanceACvau : $@convention(thin) () -> Builtin.RawPointer // user: %5
  %5 = apply %4() : $@convention(thin) () -> Builtin.RawPointer // user: %6
  %6 = pointer_to_address %5 : $Builtin.RawPointer to [strict] $*Teacher // user: %7
  %7 = load %6 : $*Teacher                        // users: %9, %8
  strong_retain %7 : $Teacher                     // id: %8
  strong_release %7 : $Teacher                    // id: %9
  %10 = integer_literal $Builtin.Int32, 0         // user: %11
  %11 = struct $Int32 (%10 : $Builtin.Int32)      // user: %12
  return %11 : $Int32                             // id: %12
} // end sil function 'main'

// one-time initialization function for sharedInstance
sil private [global_init_once_fn] @$s4main7TeacherC14sharedInstance_WZ : $@convention(c) () -> () {
bb0:
  alloc_global @$s4main7TeacherC14sharedInstanceACvpZ // id: %0
  %1 = global_addr @$s4main7TeacherC14sharedInstanceACvpZ : $*Teacher // user: %5
  %2 = metatype $@thick Teacher.Type              // user: %4
  // function_ref Teacher.__allocating_init()
  %3 = function_ref @$s4main7TeacherCACyc029_12232F587A4C5CD8B1EEDF696793D2FCLlfC : $@convention(method) (@thick Teacher.Type) -> @owned Teacher // user: %4
  %4 = apply %3(%2) : $@convention(method) (@thick Teacher.Type) -> @owned Teacher // user: %5
  store %4 to %1 : $*Teacher                      // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4main7TeacherC14sharedInstance_WZ'

// Teacher.__allocating_init()
sil private [exact_self_class] @$s4main7TeacherCACyc029_12232F587A4C5CD8B1EEDF696793D2FCLlfC : $@convention(method) (@thick Teacher.Type) -> @owned Teacher {
// %0 "$metatype"
bb0(%0 : $@thick Teacher.Type):
  %1 = alloc_ref $Teacher                         // user: %3
  // function_ref Teacher.().init()
  %2 = function_ref @$s4main7TeacherCACyc029_12232F587A4C5CD8B1EEDF696793D2FCLlfc : $@convention(method) (@owned Teacher) -> @owned Teacher // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Teacher) -> @owned Teacher // user: %4
  return %3 : $Teacher                            // id: %4
} // end sil function '$s4main7TeacherCACyc029_12232F587A4C5CD8B1EEDF696793D2FCLlfC'

// Teacher.sharedInstance.unsafeMutableAddressor
sil hidden [global_init] @$s4main7TeacherC14sharedInstanceACvau : $@convention(thin) () -> Builtin.RawPointer {
bb0:
  %0 = global_addr @$s4main7TeacherC14sharedInstance_Wz : $*Builtin.Word // user: %1
  %1 = address_to_pointer %0 : $*Builtin.Word to $Builtin.RawPointer // user: %3
  // function_ref one-time initialization function for sharedInstance
  %2 = function_ref @$s4main7TeacherC14sharedInstance_WZ : $@convention(c) () -> () // user: %3
  %3 = builtin "once"(%1 : $Builtin.RawPointer, %2 : $@convention(c) () -> ()) : $()
  %4 = global_addr @$s4main7TeacherC14sharedInstanceACvpZ : $*Teacher // user: %5
  %5 = address_to_pointer %4 : $*Teacher to $Builtin.RawPointer // user: %6
  return %5 : $Builtin.RawPointer                 // id: %6
} // end sil function '$s4main7TeacherC14sharedInstanceACvau'

// static Teacher.sharedInstance.getter
sil hidden [transparent] @$s4main7TeacherC14sharedInstanceACvgZ : $@convention(method) (@thick Teacher.Type) -> @owned Teacher {
// %0 "self"                                      // user: %1
bb0(%0 : $@thick Teacher.Type):
  debug_value %0 : $@thick Teacher.Type, let, name "self", argno 1 // id: %1
  // function_ref Teacher.sharedInstance.unsafeMutableAddressor
  %2 = function_ref @$s4main7TeacherC14sharedInstanceACvau : $@convention(thin) () -> Builtin.RawPointer // user: %3
  %3 = apply %2() : $@convention(thin) () -> Builtin.RawPointer // user: %4
  %4 = pointer_to_address %3 : $Builtin.RawPointer to [strict] $*Teacher // user: %5
  %5 = load %4 : $*Teacher                        // users: %7, %6
  strong_retain %5 : $Teacher                     // id: %6
  return %5 : $Teacher                            // id: %7
} // end sil function '$s4main7TeacherC14sharedInstanceACvgZ'

// Teacher.().init()
sil private @$s4main7TeacherCACyc029_12232F587A4C5CD8B1EEDF696793D2FCLlfc : $@convention(method) (@owned Teacher) -> @owned Teacher {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Teacher):
  debug_value %0 : $Teacher, let, name "self", argno 1 // id: %1
  return %0 : $Teacher                            // id: %2
} // end sil function '$s4main7TeacherCACyc029_12232F587A4C5CD8B1EEDF696793D2FCLlfc'

// Teacher.deinit
sil hidden @$s4main7TeacherCfd : $@convention(method) (@guaranteed Teacher) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Teacher):
  debug_value %0 : $Teacher, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Teacher to $Builtin.NativeObject // user: %3
  return %2 : $Builtin.NativeObject               // id: %3
} // end sil function '$s4main7TeacherCfd'

// Teacher.__deallocating_deinit
sil hidden @$s4main7TeacherCfD : $@convention(method) (@owned Teacher) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Teacher):
  debug_value %0 : $Teacher, let, name "self", argno 1 // id: %1
  // function_ref Teacher.deinit
  %2 = function_ref @$s4main7TeacherCfd : $@convention(method) (@guaranteed Teacher) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Teacher) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Teacher // user: %5
  dealloc_ref %4 : $Teacher                       // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4main7TeacherCfD'

// Subject.deinit
sil hidden @$s4main7SubjectCfd : $@convention(method) (@guaranteed Subject) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Subject):
  debug_value %0 : $Subject, let, name "self", argno 1 // id: %1
  %2 = upcast %0 : $Subject to $Teacher           // user: %4
  // function_ref Teacher.deinit
  %3 = function_ref @$s4main7TeacherCfd : $@convention(method) (@guaranteed Teacher) -> @owned Builtin.NativeObject // user: %4
  %4 = apply %3(%2) : $@convention(method) (@guaranteed Teacher) -> @owned Builtin.NativeObject // users: %5, %6
  %5 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Subject
  return %4 : $Builtin.NativeObject               // id: %6
} // end sil function '$s4main7SubjectCfd'

// Subject.__deallocating_deinit
sil hidden @$s4main7SubjectCfD : $@convention(method) (@owned Subject) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Subject):
  debug_value %0 : $Subject, let, name "self", argno 1 // id: %1
  // function_ref Subject.deinit
  %2 = function_ref @$s4main7SubjectCfd : $@convention(method) (@guaranteed Subject) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Subject) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Subject // user: %5
  dealloc_ref %4 : $Subject                       // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4main7SubjectCfD'

sil_vtable Teacher {
  #Teacher.init!allocator: (Teacher.Type) -> () -> Teacher : @$s4main7TeacherCACyc029_12232F587A4C5CD8B1EEDF696793D2FCLlfC	// Teacher.__allocating_init()
  #Teacher.deinit!deallocator: @$s4main7TeacherCfD	// Teacher.__deallocating_deinit
}

sil_vtable Subject {
  #Teacher.init!allocator: (Teacher.Type) -> () -> Teacher : @$s4main7TeacherCACyc029_12232F587A4C5CD8B1EEDF696793D2FCLlfC [inherited]	// Teacher.__allocating_init()
  #Subject.deinit!deallocator: @$s4main7SubjectCfD	// Subject.__deallocating_deinit
}



// Mappings from '#fileID' to '#filePath':
//   'main/main.swift' => '/Users/chenghao/developer/logic_study/code/第一节课：类与结构体（上）/LGSwiftTest/LGSwiftTest/main.swift'


